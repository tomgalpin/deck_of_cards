{"version":3,"sources":["components/card.jsx","components/player.jsx","components/cardGame.jsx","index.jsx"],"names":["Card","props","react_default","a","createElement","className","src","image","alt","code","Player","array","length","map","card","index","components_card","key","num","this","draw","Object","toConsumableArray","Array","element","name","renderCards","cards","React","Component","CardGame","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","deck","cardsDealt","players","handleClick","bind","assertThisInitialized","playersState","i","playerCards","slice","push","playerData","setState","initDeck","clearDeck","deal","_this2","axios","get","then","response","deckData","data","_this3","deckID","deck_id","numPlayers","numCardsDealt","drawAPI","concat","setPlayerData","_this4","player","components_player","onClick","renderPlayers","App","cardGame","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f6ab262f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Card(props) {\n  return(\n    <li className=\"card\">\n      <img src={props.image} alt={props.code} />\n    </li>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './card';\n\nclass Player extends React.Component {\n\n  renderCards(array) {\n    if (array.length) {\n      return array.map( (card, index) => {\n        return  <Card\n                  key={index}\n                  image={card.image}\n                  code={card.code}\n                />\n      })\n    } else {\n      const num = this.props.draw;\n      return [...Array(num)].map((element, index) => {\n        return <li key={index }className=\"card\"></li>\n      });\n    }\n  }\n  \n  render() {\n    return(\n      <li className=\"player\">\n        <div className=\"name_container\">\n          <p>Player: {this.props.name}</p>\n        </div>\n        <div className=\"cards_container\">\n          <ol>{this.renderCards(this.props.cards)}</ol>\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default Player;","import React from 'react';\nimport axios from 'axios'\nimport Player from './player';\n\n\nclass CardGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: {},\n      draw: 5,\n      cardsDealt: [],\n      players: [\n        {\n          \"name\": \"Tom\",\n          \"cards\": []\n        },\n        {\n          \"name\": \"Jenny\",\n          \"cards\": []\n        },\n        {\n          \"name\": \"Gary\",\n          \"cards\": []\n        },\n      ],\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  setPlayerData() {\n    const cardsDealt = this.state.cardsDealt;\n    const playersState = this.state.players;\n    const draw = this.state.draw;\n    let cards = [];\n    let players = [];\n\n    for (let i=0; i < cardsDealt.length; i+=draw) {\n      const playerCards = cardsDealt.slice(i, i+draw);\n      cards.push(playerCards);\n    }\n\n    for (let i=0; i < playersState.length; i++)  {\n      const playerName = playersState[i].name;\n      const playerCards = cards[i];\n      const playerData = {\n        name: playerName,\n        cards: playerCards,\n      };\n\n      players.push(playerData);\n      this.setState({ players: players });\n    }\n  }\n\n  clearDeck() {\n    if (this.state.cardsDealt.length) {\n      this.setState({ deck: {} });\n      this.setState({ cardsDealt: []});\n\n      this.initDeck();\n    } \n  }\n  handleClick() {\n    if (this.state.cardsDealt.length) {\n      this.clearDeck(); \n    }\n    this.deal();\n  }\n\n  initDeck() {\n    const shuffleAPI = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1';\n\n    axios.get(shuffleAPI)\n    .then(response => {\n      const deckData = response.data;\n      this.setState({deck: deckData});\n    });\n  }\n\n  deal() {\n    const deckID = this.state.deck.deck_id;\n    const numPlayers = this.state.players.length;\n    const numCardsDealt = this.state.draw * numPlayers;\n    const drawAPI = `https://deckofcardsapi.com/api/deck/${deckID}/draw/?count=${numCardsDealt}`;\n\n    return axios.get(drawAPI).then( response => {\n      this.setState({ cardsDealt: response.data.cards });\n      this.setPlayerData();\n    });\n  };\n\n  renderPlayers(array) {\n    return array.map( (player, index) => {\n      return <Player\n                key={index}\n                name={player.name}\n                cards={player.cards}\n                draw={this.state.draw}\n              />\n    });\n  }\n\n  componentDidMount() {\n    this.initDeck()\n  }\n\n  render() {\n    return (\n      <div className=\"game_container\">\n        <div className=\"play_container\">\n          <button className=\"deal\" onClick={this.handleClick}>Shuffle & Deal Cards</button>\n        </div>\n        <ol>\n          {this.renderPlayers(this.state.players)}\n        </ol>\n      </div>\n    )\n  }\n}\n\nexport default CardGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app.scss';\nimport CardGame from './components/cardGame';\n\n\nclass App extends React.Component {\n\n  render() {\n    return(\n      <div>\n        <h1>Tom's Card Dealing App</h1>\n        <CardGame />\n      </div>\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('cards_app')\n);"],"sourceRoot":""}